{"version":3,"sources":["components/TodoClock.js","components/TodoForm.js","components/Todo.js","components/TodoObserver.js","components/TodoList.js","App.js","index.js"],"names":["TodoClock","props","state","time","Date","toLocaleTimeString","this","intervalID","setInterval","tick","clearInterval","setState","className","React","Component","TodoForm","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","onSubmit","preventDefault","id","Math","floor","random","text","type","placeholder","name","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","items","map","todo","index","isComplete","onClick","duration","easing","TodoObserver","positionX","positionY","left","right","speed","direction","stepNum","step","style","backgroundPositionX","backgroundPositionY","TodoList","setTodos","getLocalTodos","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af780533.chunk.js","sourcesContent":["import React from 'react';\n\nclass TodoClock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            time: new Date().toLocaleTimeString()\n        };\n    }\n    componentDidMount() {\n        this.intervalID = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n    tick() {\n        this.setState({\n            time: new Date().toLocaleTimeString()\n        });\n    }\n    render() {\n        return (\n            <p className=\"todo-clock\">\n                {this.state.time}\n            </p>\n        );\n    }\n}\n\nexport default TodoClock\n","import React, {useState, useEffect, useRef} from 'react'\nimport {AiOutlinePlus} from 'react-icons/ai'\n\nfunction TodoForm(props) {\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    });\n\n    const handleChange = e => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        props.onSubmit({\n            id: Math.floor(Math.random() * 10000),\n            text: input\n        });\n\n        setInput('');\n    };\n\n    return (\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n          {props.edit ? (\n              <>\n                <input\n                  type=\"text\"\n                  placeholder=\"Update your item\"\n                  value={input}\n                  name=\"text\"\n                  className=\"todo-input edit\"\n                  onChange={handleChange}\n                  ref={inputRef}\n                  />\n                <button className=\"todo-button edit\">Update</button>\n              </>\n          ) :\n           (\n               <>\n                 <input\n                   type=\"text\"\n                   placeholder=\"Add a task\"\n                   value={input}\n                   name=\"text\"\n                   className=\"todo-input\"\n                   onChange={handleChange}\n                   ref={inputRef}\n                   />\n                 <button className=\"todo-button\">\n                   <AiOutlinePlus className=\"add-icon\" />\n                 </button>\n               </>\n           )}\n        </form>\n    )\n}\n\nexport default TodoForm\n","import React, {useState} from 'react';\nimport TodoForm from './TodoForm';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport FlipMove from 'react-flip-move';\n\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\n    const [edit, setEdit] = useState({\n        id: null,\n        value: ''\n    });\n\n    const submitUpdate = value => {\n        updateTodo(edit.id, value);\n        setEdit({\n            id: null,\n            value: ''\n        });\n    };\n\n    if (edit.id) {\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n    }\n\n    const items = todos.map((todo, index) => (\n        <div\n          className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n          key={index}\n          >\n          <div className='todo-text' key={todo.id} onClick={() => completeTodo(todo.id)}>\n            {todo.text}\n          </div>\n\n          <div className=\"icons\">\n            <RiCloseCircleLine\n              onClick={() => removeTodo(todo.id)}\n              className='delete-icon'\n              />\n              <TiEdit\n                onClick={() => setEdit({id: todo.id, value: todo.text })}\n                className='edit-icon'\n                />\n          </div>\n        </div>\n    ));\n\n    return (\n        <div>\n          <FlipMove duration={300} easing=\"cubic-bezier(0, 0.7, 0.8, 0.1)\">\n            {items}\n          </FlipMove>\n        </div>\n    );\n}\n\nexport default Todo;\n","import React from 'react';\n\nclass TodoObserver extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            positionX: -515,\n            positionY: -67,\n            left: 10,\n            right: 70,\n            speed: 350,\n            direction: 1,\n            stepNum: 64\n        }\n    }\n\n    componentDidMount() {\n        this.intervalID = setInterval(\n            () => this.step(),\n            this.state.speed\n        );\n    }\n    componentWillUnmount() {\n        clearInterval(this.intervalID);\n    }\n\n    step() {\n        if (this.state.positionX == -3) {\n            this.state.positionX = -515;\n        }\n\n        if (this.state.right === 420) {\n            this.state.direction = 0;\n            this.state.positionY = -196;\n        }\n\n        if (this.state.right === 70) {\n            this.state.direction = 1;\n            this.state.positionY = -67;\n        }\n\n        if (this.state.direction === 1) {\n            this.setState({\n                positionX: this.state.positionX + this.state.stepNum,\n                right: this.state.right+10\n            });\n        } else {\n            this.setState({\n                positionX: this.state.positionX + this.state.stepNum,\n                right: this.state.right-10\n            });\n        }\n    }\n\n    render() {\n        let style = {\n            backgroundPositionX: this.state.positionX,\n            backgroundPositionY: this.state.positionY,\n            right: this.state.right\n        }\n        return (\n            <div className=\"todo-observer\" style={style}></div>\n        );\n    }\n}\n\nexport default TodoObserver\n","import React, {useState, useEffect} from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport TodoObserver from './TodoObserver';\n\nfunction TodoList() {\n    const [todos, setTodos] = useState([]);\n\n    // Run once when the app start\n    useEffect(() => {\n        getLocalTodos();\n    }, []);\n\n    useEffect(() => {\n        saveLocalTodos();\n    }, [todos]);\n\n    const addTodo = todo => {\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\n            return;\n        }\n\n        const newTodos = [todo, ...todos];\n\n        setTodos(newTodos);\n    };\n\n    const updateTodo = (todoId, newValue) => {\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n            return;\n        }\n\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n    };\n\n    const removeTodo = id => {\n        const removeArr = [...todos].filter(todo => todo.id !== id);\n\n        setTodos(removeArr);\n    };\n\n    const completeTodo = id => {\n        let updatedTodos = todos.map(todo => {\n            if (todo.id === id) {\n                todo.isComplete = !todo.isComplete;\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const saveLocalTodos = () => {\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\n    };\n\n    const getLocalTodos = () => {\n        if (localStorage.getItem(\"todos\") === null) {\n            localStorage.setItem(\"todos\", JSON.stringify([]));\n        } else {\n            let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n            setTodos(todoLocal);\n        }\n    };\n\n    return (\n        <div className=\"todo-wrapper\">\n          <h1>What's the Plan for Today?</h1>\n          <TodoForm onSubmit={addTodo} />\n          <Todo\n            todos={todos}\n            completeTodo={completeTodo}\n            removeTodo={removeTodo}\n            updateTodo={updateTodo}\n          />\n          <TodoObserver />\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport './App.css';\nimport TodoClock from './components/TodoClock';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n    return (\n        <div className=\"todo-app\">\n        <TodoClock />\n        <TodoList />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}